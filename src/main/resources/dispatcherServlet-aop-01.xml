<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.weeking.share"/>

    <!-- 被代理对象 -->
    <bean id="math" class="com.weeking.share.service.aop01.MathUtils"></bean>
    <!-- 通知 -->
    <bean id="aspect01" class="com.weeking.share.service.aop01.AspectProxy"></bean>

    <!--proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。-->
    <!--如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。-->
    <!--如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代理将起作用-->
    <aop:config proxy-target-class="true">
        <!-- 切点 -->
        <aop:pointcut id="pointCut" expression="execution(public * com.weeking.share.service.aop01.MathUtils.*(..))" />
        <!--切面 -->
        <aop:aspect ref="aspect01">
            <!--连接通知方法与切点 -->
            <aop:before method="before" pointcut-ref="pointCut"/>
            <aop:after method="after" pointcut-ref="pointCut"/>
        </aop:aspect>

    </aop:config>

</beans>